name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  Windows-build:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install GDAL
        run: |
          Invoke-WebRequest http://download.gisinternals.com/sdk/downloads/release-1911-x64-gdal-2-4-4-mapserver-7-4-3-libs.zip -OutFile release-1911-x64-gdal-2-4-4-mapserver-7-4-3-libs.zip
          mkdir C:\Software\GDAL\
          unzip release-1911-x64-gdal-2-4-4-mapserver-7-4-3-libs.zip -d C:\Software\GDAL
          Invoke-WebRequest http://download.gisinternals.com/sdk/downloads/release-1911-x64-gdal-2-4-4-mapserver-7-4-3.zip -OutFile release-1911-x64-gdal-2-4-4-mapserver-7-4-3.zip
          unzip release-1911-x64-gdal-2-4-4-mapserver-7-4-3.zip -d C:\Software\GDAL
      - name: Download GEOS
        run: |
          Invoke-WebRequest http://download.osgeo.org/osgeo4w/x86_64/release/geos/geos-3.8.1-1.tar.bz2 -OutFile geos-3.8.1-1.tar.bz2
      - name: Extract GEOS tar.bz2
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: geos-3.8.1-1.tar.bz2
          pathTarget: ./
      - name: Extract GEOS tar
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: geos-3.8.1-1.tar
          pathTarget: C:\Software\GEOS
      - name: Install Geoflow
        run: |
          Invoke-WebRequest https://github.com/geoflow3d/geoflow/releases/download/v0.1.2/Geoflow-0.1.2-win64.exe -OutFile geoflow-setup.exe
          .\geoflow-setup.exe /S
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=C:\Software -DGEOS_INCLUDE_DIR=C:\Software\GEOS\include -DGEOS_LIBRARY=C:\Software\GEOS\lib\geos_c.lib -DGDAL_INCLUDE_DIR=C:\Software\GDAL\include -DGDAL_LIBRARY=C:\Software\GDAL\lib\gdal_i.lib
          cmake --build . --target gfp_gdal --parallel 4 --config Release
      - name: Collect dll's
        run: |
          mkdir gfp-gdal
          mkdir gfp-gdal\deps
          cp build\Release\gfp_gdal.dll gfp-gdal\
          cp C:\Software\GDAL\bin\expat.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\freexl.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\gdal204.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\iconv.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\libcurl.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\libeay32.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\libmysql.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\libpq.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\libxml2.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\openjp2.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\proj.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\spatialite.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\sqlite3.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\ssleay32.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\xerces-c_3_2.dll gfp-gdal\deps\
          cp C:\Software\GDAL\bin\zlib1.dll gfp-gdal\deps\
          cp C:\Software\GEOS\bin\geos_c.dll gfp-gdal\deps\
          cp C:\Software\GEOS\bin\geos.dll gfp-gdal\deps\
      - name: Create artifact
        uses: actions/upload-artifact@master
        with:
          name: gfp-gdal-win64
          path: gfp-gdal

  Release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: Build Windows
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # - name: Build
      #   uses: ././github/actions/Build
      - name: Build project # This would actually build your project, using zip for an example artifact
        uses: actions/download-artifact@v1
        with:
          name: gfp-gdal-win64
          path: build-artifact/
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build-artifact/gfp_gdal-win64.zip
          asset_name: gfp-gdal-win64.zip
          asset_content_type: application/zip
